{"path":"sem5/CD/Mod2/Module 2_III_SLR_CLR.pdf","text":"BCSE307L – COMPILER DESIGN 12 Bottom Up Parsing ❑Reduction ❑Handle Pruning ❑Shift-Reduce Parsing ❑Operator Precedence ❑LR Parser ❑SLR (Simple LR) ❑CLR (Canonical LR) ❑LALR (Lookahead LR) 3 LR Parsing : Simple LR (SLR) LR(k) L – left to right scanning of the input R – construction a rightmost derivation in reverse K – number of input symbols of lookahead that are used in marking parsing decisions. ◦ K =0 or k = 1, LR parser with k ≤ 1 4 LR Parsing ▪ LR parsers can be constructed to recognize all programming language constructs for which context-free grammars ▪ LR-parsing method is the most general non-backtracking shift-reduce parsing method ▪ LR parser can detect a syntactic error as soon as it is possible to do so on a left to right scan of the input ▪ The class of grammars that can be parsed using LR methods is a proper superset of the class of grammars 5 LR Parser ▪Augmented Grammar ▪Finding Canonical LR(0) items ▪Finding First and Follow ▪Parser Table ▪Stack Implementation 6 1) Augmented Grammar If G is a grammar with start Symbol S, then G’ ,the augmented grammar for G, is G with a new start symbol S’ and production S’ → S 7 Example E → E+T | T T → T*F | F F → (E) F → id 8 1) Augmented Grammar E’ → E E → E+T --- (1) E → T --- (2) T → T*F --- (3) T → F ---(4) F → (E) ---(5) F → id ---(6) 9 2) Finding Canonical LR(0) items Items and the LR(0) Automaton ▪Closure of Item sets ▪Function GOTO 10 Items and the LR(0) Automaton ▪ LR parser makes shit-reduce decisions by maintaining states to keep track of where we are in a parse ▪ States represent sets of “items” ▪ An LR(0) item of s grammar G is a production of G with a dot at some position of the body. ▪ Production A → XYZ yields the four items 11 Ex: A → aBb Possible LR(0) Items: A → .aBb A → a.Bb A → aB.b A → aBb. 12 Construction of Parse Tree 13 1.Construction of set of LR(0) items 2.Construction of PT using LR(0) ➢ Collection of set of LR(0) items-canonical collection of LR(0) An LR(0) item of a grammar G is a production of G a dot at the some position of the right side. Using closure Goto function Closure of Item Sets 14 Function GOTO 15 Canonical Collection of sets of LR(0) 16 Canonical Collections of LR(0) items Example: 1718192021 3) FIRST and FOLLOW FIRST(X) Rules: 1. X is a Terminal, FIRST (X) = { X } 2. X is a Non-terminal, X → Y1, Y2, Y3 . . . . Yk , K ≥ 1, FIRST(X) = FIRST(Y1) 3. X → ε is a production, FIRST(X) = { ε } 22 FOLLOW (X) Rules: 1. S is a Start Symbol, FOLLOW(S) = $ 2. If a production A → α B β , FOLLOW(B) = FIRST(β) – ε 3. If a production A → α B or A → α B β i.e, FIRST(β) = ε FOLLOW (B) = FOLLOW(A) 23 FIRST and FOLLOW Non- terminal FIRST FOLLOW E ( , id +, ) , $ T ( , id +, * , ) , $ F ( , id +, *, ) , $ 24 4) LR Parsing LR Parsing Algorithm ▪Structure of the LR Parsing Table ▪LR Parser Configurations ▪Behavior of the LR Parser 2526 LR Parsing Algorithm Sm Xm Sm-1 Xm-1 . . S1 X1 S0 a1 ... ai ... an $ Action Table terminals and $ s t four different a actions t e s Goto Table non-terminal s t each item is a a state number t e s LR Parsing Algorithm stack input output Structure of the LR Parsing Table 27 LR Parser Configurations A Configuration of an LR parser is a pair This configuration represents the right –sentential form 28 Behavior of the LR Parser 29 Behavior of the LR Parser 30 LR Parsing Algorithm 3132 LR Parsing Algorithm ACTION and GOTO functions of an LR-parsing table for the expression grammar. 33 Constructing SLR-Parsing Table 34 Constructing SLR-Parsing Table 35 Parsing Table 36 5) Stack Implementation 37 Viable Prefixes The prefixes of right sentential forms that can appear on the stack of shift-reduce parser are called viable prefixes. Item A →β1β2 is valid prefix α β1 if there is a derivations S’ => α Aw => α β1β2 w rm rm 38 More Powerful LR-Parsers Canonical-LR (CLR) ◦Makes full use of the lookahed symbols ◦Large set of items called LR(1) items Lookahead-LR (LALR) ◦Based on LR(0) set of items and fewer states based on the LR(1) items 39 Canonical LR(1) Items 4041 Canonical LR(1) ItemsCLR – Example 2 4243 CLR – Example 2 44 CLR – Example 2 45 CLR – Example 2 46 CLR – Example 2CLR – Example 2 47 LALR – Example 2 48 LALR – Example 2 49 LALR – Example 2 50 Thank You 51","libVersion":"0.5.0","langs":""}