{"path":"sem5/DBMS/pdfs/Modules 1 2 3 QB.pdf","text":"MODULE 1 Database Systems Concepts and Architecture 1. Compare and contrast the hierarchical, network, and relational data models. Which model is most suitable for modern applications and why? 2. Traditional file systems were widely used before DBMS became popular. Compare both approaches and explain how the key characteristics of DBMS. 3. Differentiate between a database schema and an instance with suitable examples. Explain how schema remains constant while instances change over time. Illustrate your answer with a real- world application - a university or banking system. 4. Identify and explain the main actors involved in a Database Management System (DBMS). Describe the roles and responsibilities of each actor with suitable examples from real- world application - online banking. 5. Explain the three-schema architecture of a DBMS with the help of a neat diagram. How does this architecture support data abstraction and independence? Justify your answer with real- world examples for each level. 6. What is Client-Server Architecture in DBMS? Draw a simple diagram to show how it works. Explain how this architecture helps in handling multiple users, improves security, and gives better performance. MODULE 2 Relational Model and E-R Modeling 1. A university library wants to develop a database system to manage its book collection, memberships, and borrowing activities. The system should track information about books (titles, authors, publishers, etc.), students (IDs, names, majors, etc.), and faculty members (IDs, names, departments, etc.). It also needs to record borrowing transactions, including the borrower (student or faculty ID), borrowed book ID, and borrowing date. Design an ER model and map it into relational data model for this library management system considering entities, attributes and their relationships that are needed in the database. 2. Answer the following with the help of the ER diagram. i. Find the minimum number of tables required. ii. Represent all the tables with their Primary keys, Attributes and Relationships type. iii. What does ‘N’ and ‘R2’ represent? iv. Can I have a valid DBMS without ‘N’ entity? Justify. v. Identify the derived key in the given diagram, if any. 3. Consider the following ER diagram and translate into a relational schema with all individual tables. 4. A university maintains the following two tables in its database: StudentI D Nam e Email Departmen tID 101 Riya riya@abc.ed u D01 102 Arju n arjun@abc.e du D02 Departmen tID DepartmentNa me HOD D01 Computer Science Dr. Mehta D02 Electronics Dr. Sharma Based on the above scenario, answer the following: 1. Identify the Primary Key in both tables. 2. List all possible Candidate Keys in the STUDENT table. 3. Identify the Foreign Key and explain its role. 4. State any two Integrity Constraints that are applicable in this scenario. 5. What will happen if a student is added with a DepartmentID that does not exist in the DEPARTMENT table? Justify your answer based on referential integrity. 5. A company maintains two tables: EMPLOYEE(EmpID, Name, DeptID) and DEPARTMENT(DeptID, DeptName). Explain how you would apply Primary Key and Foreign Key constraints in these tables. What happens if a new employee is added with a non-existent DeptID? 6. Explain different types of integrity constraints in DBMS. For each of the following, provide an example: a) Entity Integrity b) Referential Integrity c) Domain Constraint Why are these constraints important in maintaining consistency? Module 3 1. (i). Give an example of a table which is not in First Normal Form. Your table must be formed from a student’s database with attributes sid, sname, sex, major, gpa, activity and fee. (ii) Give an example of a table which in First Normal Form but not in Second Normal Form. Use the same student’s database. Provide your own keys and constraints. Convert your table into Second normal form relations. (iii) Give an example scenario in which this student database is in Second Normal form but not in Third normal form. Convert your table into third normal form relations. Provide the keys and constraints used by you. (iv) Give an instance of student’s database which is in Third Normal Form but not in Boyce Codd normal form. (v) What is the need for higher normal forms namely Fourth normal form, fifth normal form and Domain/Key normal form. Which is the highest normal form and why? 2. Consider the relation REFRIG( Model#, Year, Price, Manufacturing-plant, Colour), which is abbreviated as REFRIG(M, Y, P, Mp, C) , and with the following set F of functional dependencies: F = { MMp, MYP, MpC} (i) Evaluate each of the following as a candidate key for REFRIG, giving reasons why it can or cannot be a key: M, MY, MC. (ii) Based on the above key determination, state whether the relation REFRIG is in 3NF and provide proper reasons. (iii) Based on the above key determination, state whether the relation REFRIG is in BC/NF and provide proper reasons. (iv)Consider the decomposition of REFRIG into D = (R1(M, Y, P) and R2(M, Mp, C). Is this decomposition loseless? Show why. (v) Check whether the decomposition is dependency preserving. 3. Consider the relation R= (ABCDEFG) with the functional dependencies namely F= {AB CD, AF D, DE F, C G, F E → → → → → and G A}. The values of R are atomic.→ (i) Find the candidate keys of R. (ii) Apply the closure computation algorithm and find the closure of F. (iii) Apply attribute closure algorithm and find the minimal cover of F. (iv) Check whether the given R is in 1NF? If not convert it into 1 NF relations. Also check whether the given R is in 2NF? If not convert it into 2 NF relations. (v) Check whether the given R is in 3 NF? If not convert it into 3 NF relations. Also check whether R is in BC/NF. If not, convert R into BC/NF relations. 4. Consider the universal relation R (A, B, C, D, E, F, G, H, I, J). The set of functional Dependencies are FD = { AB  C, A  DE, BF, FGH, DIJ }. (i) What is the key for R? (ii) Check whether it is in 2NF. If not, convert it into 2NF relations. (iii) Check whether it is in 3NF. If not, convert it into 3NF relations (iv) Find the closure of the set FD. (v) Find the closure of the attribute A.","libVersion":"0.5.0","langs":""}