{"path":"sem5/DBMS/pdfs/Module 3.2.pdf","text":"Module 3 Module:3 Relational Database Design Database Design – Schema Refinement - Guidelines for Relational Schema – Functional dependencies - Axioms on Functional Dependencies- Normalization: First, Second and Third Normal Forms - Boyce Codd Normal Form, Multi-valued dependency and Fourth Normal form - Join dependency and Fifth Normal form  Reference :  R. Elmasri & S. B. Navathe, Fundamentals of Database Systems, Addison Wesley, 7th Edition, 2016  A. Silberschatz, H. F. Korth & S. Sudarshan, Database System Concepts, McGraw Hill,7th Edition 2019. Normalization is the process of organizing data in a database to reduce redundancy and improve data integrity. It involves decomposing relations into well-structured tables based on functional dependencies. Slide 1- 2 Normalization  A given relation is called in First Normal Form (1NF) if each cell of the table contains only an atomic value. OR  A given relation is called in First Normal Form (1NF) if the attribute of every tuple is either single valued or a null value. Slide 1- 3 First Normal Form Student_id Name Subjects 100 Akshay Computer Networks, Designing 101 Aman Database Management System 102 Anjali Automata, Compiler Design The following relation is not in 1NF Student_id Name Subjects 100 Akshay Computer Networks 100 Akshay Designing 101 Aman Database Management System 102 Anjali Automata 102 Anjali Compiler Design Slide 1- 4 First Normal Form •This relation can be brought into 1NF. •This can be done by rewriting the relation such that each cell of the table contains only one value. Relation is in 1NF Slide 1- 5 First Normal Form NOTE- By default, every relation is in 1NF. This is because formal definition of a relation states that value of all the attributes must be atomic. Slide 1- 6 Second Normal Form A given relation is called in Second Normal Form (2NF) if and only if, •Relation already exists in 1NF. •No partial dependency exists in the relation. Slide 1- 7 Partial Dependency A partial dependency is a dependency where few attributes of the candidate key determines non-prime attribute(s). A partial dependency is a dependency where a portion of the candidate key or incomplete candidate key determines non-prime attribute(s). In other words, A → B is called a partial dependency if and only if- 1. A is a subset of some candidate key 2. B is a non-prime attribute. If any one condition fails, then it will not be a partial dependency. NOTE- To avoid partial dependency, incomplete candidate key must not determine any non-prime attribute. However, incomplete candidate key can determine prime attributes. Slide 1- 8 Example- Consider a relation- R ( V , W , X , Y , Z ) with functional dependencies- VW → XY Y → V WX → YZ The possible candidate keys for this relation are- VW , WX , WY From here, •Prime attributes = { V , W , X , Y } •Non-prime attributes = { Z } Now, if we observe the given dependencies- •There is no partial dependency. •This is because there exists no dependency where incomplete candidate key determines any non-prime attribute. Thus, we conclude that the given relation is in 2NF. Slide 1- 9 Third Normal Form A given relation is called in Third Normal Form (3NF) if and only if- 1.Relation already exists in 2NF. 2.No transitive dependency exists for non-prime attributes. OR A relation is called in Third Normal Form (3NF) if and only if- Any one condition holds for each non-trivial functional dependency A → B 1.A is a super key 2.B is a prime attribute Slide 1- 10 Transitive Dependency A → B is called a transitive dependency if and only if- •A is not a super key. •B is a non-prime attribute. If any one condition fails, then it is not a transitive dependency. NOTE- Transitive dependency must not exist for non-prime attributes. However, transitive dependency can exist for prime attributes. Slide 1- 11 Example- Consider a relation- R ( A , B , C , D , E ) with functional dependencies- A → BC CD → E B → D E → A The possible candidate keys for this relation are- A , E , CD , BC From here, •Prime attributes = { A , B , C , D , E } •There are no non-prime attributes Now, •It is clear that there are no non-prime attributes in the relation. •In other words, all the attributes of relation are prime attributes. •Thus, all the attributes on RHS of each functional dependency are prime attributes. Thus, we conclude that the given relation is in 3NF.","libVersion":"0.5.0","langs":""}