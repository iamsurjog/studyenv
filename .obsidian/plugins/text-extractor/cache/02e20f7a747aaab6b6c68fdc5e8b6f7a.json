{"path":"sem5/CD/pdfs/Module-4.pdf","text":"BCSE307L – COMPILER DESIGN 1 Intermediate Code Generation • Variants of Syntax Trees • Directed Acyclic Graphs for Expressions • The Value-Number Method for Constructing Variants of Syntax TreesDirected Acyclic Graphs for ExpressionsThe Value-Number Method for ConstructingThe Value-Number Method for ConstructingThe Value-Number Method for ConstructingThree Address Code • Address and Instructions • Quadruples • Triples • Indirect Triples • Static Single-Assignment Form Three Address Code (TAC)TACTACTAC Address Address and Instructions Three Address Instructions Three Address InstructionsThree Address InstructionsThree Address Instructions Three Address Instructions Three Address InstructionsQuadruplesQuadruplesQuadruplesQuadruplesQuadruplesTriples Triples Triples • Triple representation • x[i] = y op arg1 arg2 (0) [ ] = x i (1) assign (0) y • Triple representation • x = y[i] op arg1 arg2 (0) = [ ] y i (1) assign x (0) Indirect TriplesIndirect TriplesStatic Single-Assignment FormStatic Single-Assignment FormSSATypes and Declarations • Type Expression • Type Equivalence • Declarations • Storage layout for Local Names • Sequences of Declarations • Fields in Records and Classes Types and DeclarationsType ExpressionType ExpressionType Expression Type Expression Type ExpressionType EquivalenceDeclarationsDeclarationsStorage layout for Local NamesStorage layout for Local NamesStorage layout for Local NamesStorage layout for Local NamesStorage layout for Local NamesStorage layout for Local Names Storage layout for Local Names Sequences of DeclarationsSequences of DeclarationsSequences of DeclarationsFields in Records and ClassesFields in Records and ClassesFields in Records and ClassesFields in Records and ClassesFields in Records and ClassesTranslation of Expressions • Operations within Expressions • Incremental Translation • Addressing Array Elements • Translation of Array References Translation of Expressions • An expression with more than one operator, like a*b+c will translate into instructions with at most one operator per instruction • An array reference a[i][j] will expand into a sequence of three-address instructions that calculate an address for the reference. Operations within Expressions • SDD builds up the three address code for an assignment statement S Operations within Expressions Operations within ExpressionsOperations within ExpressionsIncremental TranslationIncremental TranslationIncremental TranslationAddressing Array ElementsAddressing Array ElementsAddressing Array ElementsAddressing Array Elements Addressing Array Elements Translation of Array ReferencesTranslation of Array ReferencesTranslation of Array References Translation of Array References Translation of Array ReferencesTranslation of Array ReferencesTranslation of Array ReferencesTranslation of Array ReferencesTranslation of Array ReferencesControl Flow • Boolean Expressions • Short-Circuit code • Flow of control statements • Control Flow translation of Boolean expressions • Avoiding Redundant Gotos • Boolean Values and Jumping Code Boolean ExpressionsShort-Circuit codeShort-Circuit codeFlow of control statementsFlow of control statementsFlow of control statementsFlow of control statements Control Flow translation of Boolean expressions Control Flow translation of Boolean expressions Control Flow translation of Boolean expressions Control Flow translation of Boolean expressions Avoiding Redundant GotosAvoiding Redundant GotosAvoiding Redundant GotosBoolean Values and Jumping CodeBoolean Values and Jumping CodeBackpatching • One-Pass Code Generation using Backpatching • Backpatching for Boolean Expressions • Flow of control statements One-Pass Code Generation using Backpatching One-Pass Code Generation using Backpatching Backpatching for Boolean ExpressionsBackpatching for Boolean ExpressionsBackpatching for Boolean ExpressionsBackpatching for Boolean ExpressionsBackpatching for Boolean ExpressionsBackpatching for Boolean ExpressionsBackpatching for Boolean ExpressionsBackpatching for Boolean ExpressionsBackpatching for Boolean Expressions Flow of control statementsFlow of control statementsFlow of control statementsFlow of control statementsFlow of control statements Thank You","libVersion":"0.5.0","langs":""}